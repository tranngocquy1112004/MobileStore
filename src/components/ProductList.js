/**
 * Module hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m t·ª´ file JSON
 * S·ª≠ d·ª•ng vanilla JavaScript ƒë·ªÉ render giao di·ªán
 */

// ƒê·ªãnh nghƒ©a c√°c h·∫±ng s·ªë
const API_URL = `${process.env.PUBLIC_URL}/db.json`; // ƒê∆∞·ªùng d·∫´n t·ªõi file JSON ch·ª©a d·ªØ li·ªáu s·∫£n ph·∫©m
const ROOT_ELEMENT_ID = "app"; // ID c·ªßa ph·∫ßn t·ª≠ DOM ƒë·ªÉ render n·ªôi dung

// C√°c th√¥ng b√°o tr·∫°ng th√°i
const MESSAGES = {
  LOADING: "‚è≥ ƒêang t·∫£i...", // Th√¥ng b√°o khi ƒëang t·∫£i
  ERROR: "‚ùå Kh√¥ng th·ªÉ t·∫£i s·∫£n ph·∫©m!", // Th√¥ng b√°o khi c√≥ l·ªói
  NO_PRODUCTS: "Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë·ªÉ hi·ªÉn th·ªã", // Th√¥ng b√°o khi kh√¥ng c√≥ s·∫£n ph·∫©m
};

// H√†m l·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m t·ª´ API
async function fetchProducts(signal) {
  try {
    const response = await fetch(API_URL, { signal }); // G·ª≠i y√™u c·∫ßu fetch v·ªõi signal ƒë·ªÉ h·ªßy n·∫øu c·∫ßn
    if (!response.ok) throw new Error(MESSAGES.ERROR); // Ki·ªÉm tra n·∫øu response kh√¥ng th√†nh c√¥ng
    const data = await response.json(); // Chuy·ªÉn ƒë·ªïi response th√†nh JSON
    return Array.isArray(data) ? data : data.products || []; // Tr·∫£ v·ªÅ m·∫£ng s·∫£n ph·∫©m ho·∫∑c r·ªóng n·∫øu kh√¥ng h·ª£p l·ªá
  } catch (error) {
    if (error.name !== "AbortError") throw error; // N√©m l·ªói n·∫øu kh√¥ng ph·∫£i l·ªói h·ªßy
    return []; // Tr·∫£ v·ªÅ m·∫£ng r·ªóng n·∫øu b·ªã h·ªßy
  }
}

// H√†m t·∫°o HTML cho th√¥ng b√°o tr·∫°ng th√°i
function StatusMessage(type) {
  return `
    <div class="status-container ${type}">
      <p class="status-message">${MESSAGES[type.toUpperCase()]}</p>
    </div>
  `;
}

// H√†m t·∫°o HTML cho m·ªôt s·∫£n ph·∫©m
function ProductCard(product) {
  return `
    <div class="product-card">
      <div class="product-image-container">
        <img 
          src="${product.image}" 
          alt="${product.name}" 
          class="product-image" 
          loading="lazy" // T·∫£i ·∫£nh theo ch·∫ø ƒë·ªô lazy ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t
        />
      </div>
      <div class="product-info">
        <h3 class="product-name">${product.name}</h3> <!-- T√™n s·∫£n ph·∫©m -->
        <p class="product-price">
          üí∞ ${product.price.toLocaleString("vi-VN")} VNƒê <!-- Gi√° s·∫£n ph·∫©m ƒë·ªãnh d·∫°ng VNƒê -->
        </p>
        <a 
          href="/products/${product.id}" 
          class="product-details-link" 
          aria-label="Xem chi ti·∫øt ${product.name}"
        >
          <button class="details-button">Chi ti·∫øt</button> <!-- N√∫t xem chi ti·∫øt -->
        </a>
      </div>
    </div>
  `;
}

// H√†m ch√≠nh ƒë·ªÉ qu·∫£n l√Ω v√† hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m
function ProductList() {
  let products = []; // M·∫£ng l∆∞u tr·ªØ danh s√°ch s·∫£n ph·∫©m
  let status = "loading"; // Tr·∫°ng th√°i hi·ªán t·∫°i: loading, loaded, error, no_products
  const controller = new AbortController(); // T·∫°o controller ƒë·ªÉ h·ªßy fetch n·∫øu c·∫ßn

  // H√†m t·∫£i danh s√°ch s·∫£n ph·∫©m
  async function loadProducts() {
    try {
      const result = await fetchProducts(controller.signal); // L·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m
      products = result || []; // C·∫≠p nh·∫≠t danh s√°ch s·∫£n ph·∫©m
      status = products.length ? "loaded" : "no_products"; // C·∫≠p nh·∫≠t tr·∫°ng th√°i
      render(); // Render giao di·ªán
    } catch {
      status = "error"; // C·∫≠p nh·∫≠t tr·∫°ng th√°i l·ªói
      render(); // Render giao di·ªán l·ªói
    }
  }

  // H√†m render giao di·ªán
  function render() {
    const app = document.getElementById(ROOT_ELEMENT_ID); // L·∫•y ph·∫ßn t·ª≠ DOM ch√≠nh
    if (!app) return; // Tho√°t n·∫øu kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠

    // Hi·ªÉn th·ªã th√¥ng b√°o tr·∫°ng th√°i n·∫øu kh√¥ng ph·∫£i tr·∫°ng th√°i loaded
    if (status !== "loaded") {
      app.innerHTML = StatusMessage(status);
      return;
    }

    // T·∫°o HTML cho danh s√°ch s·∫£n ph·∫©m
    const productCardsHTML = products.map(ProductCard).join("");
    app.innerHTML = `
      <main class="product-list-container">
        <h1 class="product-list-title">üì± Danh s√°ch s·∫£n ph·∫©m</h1> <!-- Ti√™u ƒë·ªÅ danh s√°ch -->
        <div class="product-grid">${productCardsHTML}</div> <!-- L∆∞·ªõi s·∫£n ph·∫©m -->
      </main>
    `;
  }

  // Kh·ªüi ch·∫°y t·∫£i s·∫£n ph·∫©m
  loadProducts();

  // Tr·∫£ v·ªÅ h√†m cleanup ƒë·ªÉ h·ªßy fetch khi c·∫ßn
  return () => controller.abort();
}

// G·ªçi ProductList khi DOM ƒë√£ s·∫µn s√†ng
document.addEventListener("DOMContentLoaded", () => {
  ProductList();
});

export default ProductList;