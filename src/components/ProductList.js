const API_URL = `${process.env.PUBLIC_URL}/db.json`;

// Th√¥ng b√°o tr·∫°ng th√°i
const MESSAGES = {
  LOADING: "‚è≥ ƒêang t·∫£i...",
  ERROR: "‚ùå Kh√¥ng th·ªÉ t·∫£i s·∫£n ph·∫©m!",
  NO_PRODUCTS: "Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë·ªÉ hi·ªÉn th·ªã",
};

// H√†m fetch d·ªØ li·ªáu s·∫£n ph·∫©m
async function fetchProducts(signal) {
  try {
    const response = await fetch(API_URL, { signal });
    if (!response.ok) throw new Error(MESSAGES.ERROR);

    const data = await response.json();
    return Array.isArray(data) ? data : data.products || [];
  } catch (error) {
    if (error.name !== "AbortError") throw error;
  }
}

// Component hi·ªÉn th·ªã th√¥ng b√°o tr·∫°ng th√°i
function StatusMessage(type) {
  return `
    <div class="status-container ${type}">
      <p class="status-message">${MESSAGES[type.toUpperCase()]}</p>
    </div>
  `;
}

// Component hi·ªÉn th·ªã m·ªôt s·∫£n ph·∫©m
function ProductCard(product) {
  return `
    <div class="product-card">
      <div class="product-image-container">
        <img 
          src="${product.image}" 
          alt="${product.name}" 
          class="product-image" 
          loading="lazy"
        />
      </div>
      <div class="product-info">
        <h3 class="product-name">${product.name}</h3>
        <p class="product-price">
          üí∞ ${product.price.toLocaleString("vi-VN")} VNƒê
        </p>
        <a 
          href="/products/${product.id}" 
          class="product-details-link" 
          aria-label="Xem chi ti·∫øt ${product.name}"
        >
          <button class="details-button">Chi ti·∫øt</button>
        </a>
      </div>
    </div>
  `;
}

// Component ch√≠nh hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m
function ProductList() {
  let products = [];
  let status = "loading";
  const controller = new AbortController();

  // H√†m load s·∫£n ph·∫©m
  async function loadProducts() {
    try {
      const productList = await fetchProducts(controller.signal);
      products = productList || [];
      status = products.length ? "loaded" : "no_products";
      render();
    } catch {
      status = "error";
      render();
    }
  }

  // H√†m render UI
  function render() {
    const app = document.getElementById("app");
    if (!app) return;

    if (status !== "loaded") {
      app.innerHTML = StatusMessage(status);
      return;
    }

    const productCards = products.map(product => ProductCard(product)).join("");
    app.innerHTML = `
      <main class="product-list-container">
        <h1 class="product-list-title">üì± Danh s√°ch s·∫£n ph·∫©m</h1>
        <div class="product-grid">${productCards}</div>
      </main>
    `;
  }

  // Kh·ªüi ch·∫°y load d·ªØ li·ªáu
  loadProducts();

  // Cleanup khi component b·ªã h·ªßy
  return () => controller.abort();
}

// Kh·ªüi ch·∫°y component
document.addEventListener("DOMContentLoaded", () => {
  ProductList();
});

// Xu·∫•t component n·∫øu d√πng module
export default ProductList;