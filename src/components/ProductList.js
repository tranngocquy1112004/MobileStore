/**
 * Module hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m t·ª´ file JSON.
 * S·ª≠ d·ª•ng vanilla JavaScript (JS thu·∫ßn) ƒë·ªÉ thao t√°c DOM v√† render giao di·ªán.
 */

// --- ƒê·ªãnh nghƒ©a c√°c h·∫±ng s·ªë ---

// ƒê∆∞·ªùng d·∫´n t·ªõi file JSON ch·ª©a d·ªØ li·ªáu s·∫£n ph·∫©m.
// process.env.PUBLIC_URL th∆∞·ªùng ƒë∆∞·ª£c d√πng trong c√°c project build tool (nh∆∞ Create React App)
// ƒë·ªÉ tr·ªè t·ªõi th∆∞ m·ª•c public.
const API_URL = `${process.env.PUBLIC_URL}/db.json`;
// ID c·ªßa ph·∫ßn t·ª≠ HTML m√† ch√∫ng ta s·∫Ω render n·ªôi dung v√†o.
const ROOT_ELEMENT_ID = "app";

// C√°c th√¥ng b√°o tr·∫°ng th√°i kh√°c nhau hi·ªÉn th·ªã cho ng∆∞·ªùi d√πng.
const MESSAGES = {
  LOADING: "‚è≥ ƒêang t·∫£i...", // Th√¥ng b√°o khi d·ªØ li·ªáu ƒëang ƒë∆∞·ª£c t·∫£i
  ERROR: "‚ùå Kh√¥ng th·ªÉ t·∫£i s·∫£n ph·∫©m!", // Th√¥ng b√°o khi c√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh t·∫£i
  NO_PRODUCTS: "Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë·ªÉ hi·ªÉn th·ªã", // Th√¥ng b√°o khi t·∫£i xong nh∆∞ng kh√¥ng c√≥ s·∫£n ph·∫©m n√†o
};

// --- H√†m l·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m t·ª´ API ---
// H√†m async v√¨ s·ª≠ d·ª•ng fetch v√† await
async function fetchProducts(signal) {
  try {
    // Th·ª±c hi·ªán y√™u c·∫ßu HTTP GET ƒë·∫øn API_URL.
    // Truy·ªÅn signal t·ª´ AbortController ƒë·ªÉ c√≥ th·ªÉ h·ªßy y√™u c·∫ßu n·∫øu c·∫ßn.
    const response = await fetch(API_URL, { signal });
    // Ki·ªÉm tra n·∫øu response kh√¥ng th√†nh c√¥ng (v√≠ d·ª•: status code 404, 500).
    if (!response.ok) {
      // N√©m m·ªôt Error m·ªõi v·ªõi th√¥ng b√°o l·ªói.
      throw new Error(MESSAGES.ERROR);
    }
    // Chuy·ªÉn ƒë·ªïi body c·ªßa response th√†nh JSON.
    const data = await response.json();
    // Ki·ªÉm tra c·∫•u tr√∫c d·ªØ li·ªáu tr·∫£ v·ªÅ:
    // N·∫øu data l√† m·ªôt m·∫£ng, tr·∫£ v·ªÅ data ƒë√≥.
    // N·∫øu data l√† object v√† c√≥ thu·ªôc t√≠nh 'products' l√† m·∫£ng, tr·∫£ v·ªÅ data.products.
    // N·∫øu kh√¥ng ph·∫£i c√°c tr∆∞·ªùng h·ª£p tr√™n, tr·∫£ v·ªÅ m·∫£ng r·ªóng.
    return Array.isArray(data) ? data : data.products || [];
  } catch (error) {
    // B·∫Øt c√°c l·ªói x·∫£y ra trong qu√° tr√¨nh fetch.
    // Ki·ªÉm tra n·∫øu l·ªói kh√¥ng ph·∫£i l√† 'AbortError' (l·ªói do y√™u c·∫ßu b·ªã h·ªßy).
    if (error.name !== "AbortError") {
      throw error; // N√©m l·∫°i l·ªói ƒë·ªÉ ƒë∆∞·ª£c x·ª≠ l√Ω ·ªü n∆°i g·ªçi h√†m n√†y.
    }
    // N·∫øu l√† 'AbortError', nghƒ©a l√† y√™u c·∫ßu ƒë√£ b·ªã h·ªßy m·ªôt c√°ch ch·ªß ƒë·ªông,
    // ch√∫ng ta kh√¥ng coi ƒë√≥ l√† l·ªói nghi√™m tr·ªçng v√† tr·∫£ v·ªÅ m·∫£ng r·ªóng.
    return [];
  }
}

// --- H√†m t·∫°o chu·ªói HTML cho th√¥ng b√°o tr·∫°ng th√°i ---
function StatusMessage(type) {
  // T·∫°o m·ªôt div v·ªõi class 'status-container' v√† m·ªôt class ƒë·ªông d·ª±a tr√™n 'type' (loading, error, no_products).
  // B√™n trong l√† m·ªôt paragraph v·ªõi class 'status-message' v√† n·ªôi dung l·∫•y t·ª´ MESSAGES.
  return `
    <div class="status-container ${type}">
      <p class="status-message">${MESSAGES[type.toUpperCase()]}</p>
    </div>
  `;
}

// --- H√†m t·∫°o chu·ªói HTML cho m·ªôt th·∫ª s·∫£n ph·∫©m (Product Card) ---
function ProductCard(product) {
  // Ki·ªÉm tra d·ªØ li·ªáu s·∫£n ph·∫©m c∆° b·∫£n ƒë·ªÉ tr√°nh l·ªói render n·∫øu thi·∫øu th√¥ng tin.
  // M·∫∑c d√π trong JS thu·∫ßn kh√¥ng b·∫Øt bu·ªôc ki·ªÉm tra nh∆∞ React Component,
  // vi·ªác n√†y gi√∫p m√£ m·∫°nh m·∫Ω h∆°n. (Kh√¥ng b·∫Øt bu·ªôc ph·∫£i th√™m ki·ªÉm tra n√†y n·∫øu d·ªØ li·ªáu lu√¥n ƒë√∫ng ƒë·ªãnh d·∫°ng).
  // if (!product?.id || !product.name || !product.image || typeof product.price !== "number") {
  //   console.error("Invalid product data:", product);
  //   return ''; // Tr·∫£ v·ªÅ chu·ªói r·ªóng n·∫øu d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá
  // }

  return `
    <div class="product-card">
      <div class="product-image-container">
        <img
          src="${product.image}"
          alt="${product.name}"
          class="product-image"
          loading="lazy" // S·ª≠ d·ª•ng thu·ªôc t√≠nh loading="lazy" ƒë·ªÉ tr√¨nh duy·ªát ch·ªâ t·∫£i ·∫£nh khi n√≥ g·∫ßn hi·ªÉn th·ªã tr√™n viewport
        />
      </div>
      <div class="product-info">
        <h3 class="product-name">${product.name}</h3> <p class="product-price">
          üí∞ ${product.price.toLocaleString("vi-VN")} VNƒê </p>
        <a
          href="/products/${product.id}" // Li√™n k·∫øt ƒë·∫øn trang chi ti·∫øt s·∫£n ph·∫©m (ƒë∆∞·ªùng d·∫´n gi·∫£ ƒë·ªãnh)
          class="product-details-link"
          aria-label="Xem chi ti·∫øt ${product.name}" // Aria label cho kh·∫£ nƒÉng ti·∫øp c·∫≠n
        >
          <button class="details-button">Chi ti·∫øt</button> </a>
      </div>
    </div>
  `;
}

// --- H√†m ch√≠nh qu·∫£n l√Ω tr·∫°ng th√°i v√† render danh s√°ch s·∫£n ph·∫©m ---
function ProductList() {
  let products = []; // Bi·∫øn c·ª•c b·ªô ƒë·ªÉ l∆∞u danh s√°ch s·∫£n ph·∫©m ƒë√£ t·∫£i.
  let status = "loading"; // Bi·∫øn c·ª•c b·ªô theo d√µi tr·∫°ng th√°i hi·ªán t·∫°i ('loading', 'loaded', 'error', 'no_products').
  // T·∫°o m·ªôt AbortController. Signal c·ªßa n√≥ s·∫Ω ƒë∆∞·ª£c d√πng ƒë·ªÉ h·ªßy y√™u c·∫ßu fetch n·∫øu c·∫ßn
  // (v√≠ d·ª•: n·∫øu component n√†y b·ªã "h·ªßy" tr∆∞·ªõc khi fetch ho√†n th√†nh, trong m√¥i tr∆∞·ªùng framework).
  const controller = new AbortController();

  // H√†m async ƒë·ªÉ t·∫£i danh s√°ch s·∫£n ph·∫©m.
  async function loadProducts() {
    try {
      // G·ªçi h√†m fetchProducts ƒë·ªÉ l·∫•y d·ªØ li·ªáu, truy·ªÅn signal.
      const result = await fetchProducts(controller.signal);
      products = result || []; // C·∫≠p nh·∫≠t bi·∫øn products v·ªõi k·∫øt qu·∫£ (ƒë·∫£m b·∫£o l√† m·∫£ng).
      // C·∫≠p nh·∫≠t tr·∫°ng th√°i: n·∫øu c√≥ s·∫£n ph·∫©m (products.length > 0) l√† 'loaded', ng∆∞·ª£c l·∫°i l√† 'no_products'.
      status = products.length ? "loaded" : "no_products";
      render(); // Sau khi c·∫≠p nh·∫≠t state (bi·∫øn c·ª•c b·ªô), g·ªçi h√†m render ƒë·ªÉ c·∫≠p nh·∫≠t giao di·ªán.
    } catch (err) {
      // N·∫øu fetchProducts n√©m l·ªói (kh√¥ng ph·∫£i AbortError), b·∫Øt l·ªói ·ªü ƒë√¢y.
      console.error("L·ªói t·∫£i s·∫£n ph·∫©m:", err); // Ghi log l·ªói ra console.
      status = "error"; // C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh 'error'.
      render(); // G·ªçi h√†m render ƒë·ªÉ hi·ªÉn th·ªã th√¥ng b√°o l·ªói.
    }
  }

  // H√†m render (v·∫Ω) giao di·ªán d·ª±a tr√™n tr·∫°ng th√°i v√† d·ªØ li·ªáu hi·ªán t·∫°i.
  function render() {
    // L·∫•y ph·∫ßn t·ª≠ DOM ch√≠nh b·∫±ng ID.
    const app = document.getElementById(ROOT_ELEMENT_ID);
    // N·∫øu kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠, tho√°t h√†m.
    if (!app) {
      console.error(`Ph·∫ßn t·ª≠ DOM v·ªõi ID "${ROOT_ELEMENT_ID}" kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y.`);
      return;
    }

    // --- Render d·ª±a tr√™n tr·∫°ng th√°i ---

    // N·∫øu tr·∫°ng th√°i KH√îNG ph·∫£i 'loaded' (t·ª©c l√† 'loading', 'error', 'no_products')
    if (status !== "loaded") {
      // X√≥a n·ªôi dung c≈© v√† ch√®n HTML c·ªßa th√¥ng b√°o tr·∫°ng th√°i t∆∞∆°ng ·ª©ng.
      app.innerHTML = StatusMessage(status);
      // D·ª´ng h√†m render t·∫°i ƒë√¢y.
      return;
    }

    // N·∫øu tr·∫°ng th√°i l√† 'loaded' (c√≥ s·∫£n ph·∫©m v√† ƒë√£ t·∫£i xong)

    // T·∫°o chu·ªói HTML cho t·∫•t c·∫£ c√°c th·∫ª s·∫£n ph·∫©m b·∫±ng c√°ch map m·∫£ng products
    // qua h√†m ProductCard v√† n·ªëi c√°c chu·ªói HTML l·∫°i.
    const productCardsHTML = products.map(ProductCard).join("");
    // X√≥a n·ªôi dung c≈© v√† ch√®n c·∫•u tr√∫c HTML cho danh s√°ch s·∫£n ph·∫©m
    app.innerHTML = `
      <main class="product-list-container">
        <h1 class="product-list-title">üì± Danh s√°ch s·∫£n ph·∫©m</h1> <div class="product-grid">${productCardsHTML}</div> </main>
    `;
  }

  // --- Kh·ªüi ch·∫°y ---

  // G·ªçi h√†m loadProducts l·∫ßn ƒë·∫ßu ti√™n ƒë·ªÉ b·∫Øt ƒë·∫ßu t·∫£i d·ªØ li·ªáu khi ProductList ƒë∆∞·ª£c g·ªçi.
  loadProducts();

  // --- Cleanup (Quan tr·ªçng trong m√¥i tr∆∞·ªùng SPA ho·∫∑c khi t√°i s·ª≠ d·ª•ng component) ---

  // Tr·∫£ v·ªÅ m·ªôt h√†m cleanup. H√†m n√†y s·∫Ω ƒë∆∞·ª£c g·ªçi khi component n√†y (ho·∫∑c logic n√†y)
  // kh√¥ng c√≤n c·∫ßn thi·∫øt n·ªØa (v√≠ d·ª•: khi chuy·ªÉn sang trang kh√°c trong ·ª©ng d·ª•ng SPA).
  // H√†m cleanup s·∫Ω h·ªßy y√™u c·∫ßu fetch ƒëang ch·ªù x·ª≠ l√Ω n·∫øu n√≥ ch∆∞a ho√†n th√†nh,
  // gi√∫p tr√°nh l·ªói ho·∫∑c r√≤ r·ªâ b·ªô nh·ªõ.
  return () => {
    controller.abort(); // G·ªçi h√†m abort tr√™n AbortController ƒë·ªÉ h·ªßy y√™u c·∫ßu fetch.
  };
}

// --- Ch·∫°y ·ª©ng d·ª•ng sau khi DOM ƒë√£ s·∫µn s√†ng ---

// Th√™m m·ªôt event listener ƒë·ªÉ l·∫Øng nghe s·ª± ki·ªán 'DOMContentLoaded'.
// S·ª± ki·ªán n√†y b·∫Øn ra khi t√†i li·ªáu HTML ƒë·∫ßu ti√™n ƒë√£ ƒë∆∞·ª£c t·∫£i v√† ph√¢n t√≠ch c√∫ ph√°p ho√†n to√†n,
// m√† kh√¥ng c·∫ßn ch·ªù stylesheet, image, v√† subframe ho√†n t·∫•t t·∫£i.
document.addEventListener("DOMContentLoaded", () => {
  // Khi DOM ƒë√£ s·∫µn s√†ng, g·ªçi h√†m ProductList ƒë·ªÉ kh·ªüi t·∫°o v√† render danh s√°ch s·∫£n ph·∫©m.
  ProductList();
});

// Export ProductList l√†m default export (n·∫øu mu·ªën s·ª≠ d·ª•ng module n√†y trong c√°c file JS kh√°c).
// ƒêi·ªÅu n√†y kh√¥ng b·∫Øt bu·ªôc n·∫øu ƒë√¢y l√† file JS duy nh·∫•t ƒë∆∞·ª£c include tr·ª±c ti·∫øp v√†o HTML.
export default ProductList;