import React, { useContext, useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import { CartContext } from "./CartContext";
import { AuthContext } from "../account/AuthContext";
import CheckoutModal from "../components/CheckoutModal";
import "./CartPage.css";

// ƒê·ªãnh nghƒ©a c√°c th√¥ng b√°o c·ªë ƒë·ªãnh ƒë·ªÉ s·ª≠ d·ª•ng trong ·ª©ng d·ª•ng
const MESSAGES = {
  EMPTY_CART: "Gi·ªè h√†ng tr·ªëng",
  CHECKOUT_SUCCESS: "ƒê·∫∑t h√†ng th√†nh c√¥ng!",
  LOGIN_REQUIRED: "Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ ti·∫øp t·ª•c!",
};

// Component hi·ªÉn th·ªã t·ª´ng s·∫£n ph·∫©m trong gi·ªè h√†ng
const CartItem = ({ item, onIncrease, onDecrease, onRemove }) => {
  // Ki·ªÉm tra n·∫øu s·ªë l∆∞·ª£ng s·∫£n ph·∫©m l√† 1, n√∫t gi·∫£m s·∫Ω b·ªã v√¥ hi·ªáu h√≥a
  const isDecreaseDisabled = item.quantity === 1;

  return (
    <li className="cart-item">
      {/* H√¨nh ·∫£nh s·∫£n ph·∫©m */}
      <img src={item.image} alt={item.name} className="cart-image" />
      <div className="cart-item-details">
        {/* T√™n s·∫£n ph·∫©m */}
        <p className="cart-name">{item.name}</p>
        {/* Gi√° s·∫£n ph·∫©m, ƒë·ªãnh d·∫°ng ti·ªÅn t·ªá VNƒê */}
        <p className="cart-price">üí∞ {item.price.toLocaleString("vi-VN")} VNƒê</p>
        {/* ƒêi·ªÅu khi·ªÉn s·ªë l∆∞·ª£ng s·∫£n ph·∫©m */}
        <div className="quantity-controls">
          <button
            onClick={() => onDecrease(item.id)}
            disabled={isDecreaseDisabled}
            className={isDecreaseDisabled ? "disabled" : ""}
          >
            -
          </button>
          <span>{item.quantity}</span>
          <button onClick={() => onIncrease(item.id)}>+</button>
        </div>
      </div>
      {/* N√∫t x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng */}
      <button className="remove-button" onClick={() => onRemove(item.id)}>
        X√≥a
      </button>
    </li>
  );
};

// Component hi·ªÉn th·ªã t·ªïng ti·ªÅn v√† n√∫t mua h√†ng
const CartSummary = ({ totalPrice, onCheckout }) => (
  <div className="cart-summary">
    {/* Hi·ªÉn th·ªã t·ªïng ti·ªÅn, ƒë·ªãnh d·∫°ng ti·ªÅn t·ªá VNƒê */}
    <h3 className="total-price">
      T·ªïng ti·ªÅn: {totalPrice.toLocaleString("vi-VN")} VNƒê
    </h3>
    {/* N√∫t ƒë·ªÉ ti·∫øn h√†nh thanh to√°n */}
    <button className="checkout-button" onClick={onCheckout}>
      üõç Mua h√†ng
    </button>
  </div>
);

// Component hi·ªÉn th·ªã th√¥ng b√°o khi gi·ªè h√†ng tr·ªëng
const EmptyCart = () => (
  <p className="empty-cart-message">{MESSAGES.EMPTY_CART}</p>
);

// Component ch√≠nh c·ªßa trang gi·ªè h√†ng
const CartPage = () => {
  // Hook ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng ng∆∞·ªùi d√πng
  const navigate = useNavigate();

  // L·∫•y d·ªØ li·ªáu t·ª´ CartContext (gi·ªè h√†ng) v√† AuthContext (tr·∫°ng th√°i ƒëƒÉng nh·∫≠p)
  const { cart, removeFromCart, increaseQuantity, decreaseQuantity, clearCart } =
    useContext(CartContext);
  const { isLoggedIn } = useContext(AuthContext) || { isLoggedIn: false };

  // State ƒë·ªÉ ki·ªÉm so√°t vi·ªác hi·ªÉn th·ªã modal thanh to√°n
  const [showModal, setShowModal] = useState(false);

  // T√≠nh t·ªïng ti·ªÅn v√† t·ªïng s·ªë s·∫£n ph·∫©m trong gi·ªè h√†ng
  const totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
  const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);

  // X·ª≠ l√Ω khi ng∆∞·ªùi d√πng nh·∫•n n√∫t "Mua h√†ng"
  const handleCheckout = () => {
    if (!isLoggedIn) {
      // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, hi·ªÉn th·ªã th√¥ng b√°o v√† chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß
      alert(MESSAGES.LOGIN_REQUIRED);
      navigate("/");
      return;
    }
    // Hi·ªÉn th·ªã modal thanh to√°n n·∫øu ƒë√£ ƒëƒÉng nh·∫≠p
    setShowModal(true);
  };

  // X·ª≠ l√Ω khi ng∆∞·ªùi d√πng x√°c nh·∫≠n thanh to√°n
  const handleConfirmCheckout = (shippingInfo) => {
    // T·∫°o ƒë∆°n h√†ng m·ªõi v·ªõi th√¥ng tin gi·ªè h√†ng v√† th√¥ng tin giao h√†ng
    const order = {
      id: Date.now(),
      items: cart,
      totalPrice,
      shippingInfo,
      date: new Date().toISOString(),
    };

    // L∆∞u ƒë∆°n h√†ng v√†o localStorage
    const existingOrders = JSON.parse(localStorage.getItem("orders")) || [];
    localStorage.setItem("orders", JSON.stringify([...existingOrders, order]));

    // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng, x√≥a gi·ªè h√†ng v√† ƒë√≥ng modal
    alert(MESSAGES.CHECKOUT_SUCCESS);
    clearCart();
    setShowModal(false);
    navigate("/home");
  };

  // X·ª≠ l√Ω khi ng∆∞·ªùi d√πng h·ªßy thanh to√°n
  const handleCancelCheckout = () => {
    setShowModal(false);
  };

  // X·ª≠ l√Ω khi ng∆∞·ªùi d√πng mu·ªën x√≥a to√†n b·ªô gi·ªè h√†ng
  const handleClearCart = () => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a to√†n b·ªô gi·ªè h√†ng?")) {
      clearCart();
    }
  };

  return (
    <div className="cart-container">
      {/* Ti√™u ƒë·ªÅ gi·ªè h√†ng, hi·ªÉn th·ªã t·ªïng s·ªë s·∫£n ph·∫©m */}
      <h2>üõç Gi·ªè H√†ng ({totalItems} s·∫£n ph·∫©m)</h2>

      {/* Ki·ªÉm tra n·∫øu gi·ªè h√†ng tr·ªëng th√¨ hi·ªÉn th·ªã th√¥ng b√°o, ng∆∞·ª£c l·∫°i hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m */}
      {cart.length === 0 ? (
        <EmptyCart />
      ) : (
        <>
          {/* Danh s√°ch c√°c s·∫£n ph·∫©m trong gi·ªè h√†ng */}
          <ul className="cart-list">
            {cart.map((item) => (
              <CartItem
                key={item.id}
                item={item}
                onIncrease={increaseQuantity}
                onDecrease={decreaseQuantity}
                onRemove={removeFromCart}
              />
            ))}
          </ul>

          {/* N√∫t x√≥a to√†n b·ªô gi·ªè h√†ng */}
          <button className="clear-cart-button" onClick={handleClearCart}>
            X√≥a t·∫•t c·∫£
          </button>

          {/* Hi·ªÉn th·ªã t·ªïng ti·ªÅn v√† n√∫t mua h√†ng */}
          <CartSummary totalPrice={totalPrice} onCheckout={handleCheckout} />
        </>
      )}

      {/* Hi·ªÉn th·ªã modal thanh to√°n n·∫øu showModal l√† true */}
      {showModal && (
        <CheckoutModal
          cart={cart}
          totalPrice={totalPrice}
          onConfirm={handleConfirmCheckout}
          onCancel={handleCancelCheckout}
        />
      )}

      {/* C√°c li√™n k·∫øt ƒëi·ªÅu h∆∞·ªõng */}
      <div className="cart-links">
        <Link to="/orders" className="order-history-link">
          üìú Xem l·ªãch s·ª≠ ƒë∆°n h√†ng
        </Link>
        <Link to="/home" className="back-button">
          ‚¨Ö Quay l·∫°i c·ª≠a h√†ng
        </Link>
      </div>
    </div>
  );
};

export default CartPage;