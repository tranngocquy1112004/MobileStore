// Import c√°c th∆∞ vi·ªán v√† hook c·∫ßn thi·∫øt t·ª´ React
import React, { useContext, useState } from "react";
// Import c√°c component t·ª´ react-router-dom ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng
import { Link, useNavigate } from "react-router-dom";
// Import context ƒë·ªÉ truy c·∫≠p d·ªØ li·ªáu gi·ªè h√†ng v√† x√°c th·ª±c
import { CartContext } from "./CartContext"; // Context qu·∫£n l√Ω gi·ªè h√†ng
import { AuthContext } from "../account/AuthContext"; // Context qu·∫£n l√Ω x√°c th·ª±c
// Import component modal thanh to√°n
import CheckoutModal from "../components/CheckoutModal"; // Modal ƒë·ªÉ nh·∫≠p th√¥ng tin thanh to√°n
// Import file CSS cho trang gi·ªè h√†ng
import "./CartPage.css"; // File style cho giao di·ªán

// ƒê·ªãnh nghƒ©a c√°c th√¥ng b√°o c·ªë ƒë·ªãnh
const MESSAGES = {
  EMPTY_CART: "Gi·ªè h√†ng tr·ªëng", // Th√¥ng b√°o khi gi·ªè h√†ng r·ªóng
  CHECKOUT_SUCCESS: "ƒê·∫∑t h√†ng th√†nh c√¥ng!", // Th√¥ng b√°o khi ƒë·∫∑t h√†ng th√†nh c√¥ng
  LOGIN_REQUIRED: "Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ ti·∫øp t·ª•c!", // Th√¥ng b√°o khi ch∆∞a ƒëƒÉng nh·∫≠p
};

// Component CartItem - Hi·ªÉn th·ªã th√¥ng tin m·ªôt s·∫£n ph·∫©m trong gi·ªè h√†ng
const CartItem = ({ item, onIncrease, onDecrease, onRemove }) => { // Nh·∫≠n props: s·∫£n ph·∫©m v√† c√°c h√†m x·ª≠ l√Ω
  const isDecreaseDisabled = item.quantity === 1; // Ki·ªÉm tra n·∫øu s·ªë l∆∞·ª£ng = 1 th√¨ v√¥ hi·ªáu h√≥a n√∫t gi·∫£m

  return (
    <li className="cart-item"> {/* M·ªôt m·ª•c trong danh s√°ch gi·ªè h√†ng */}
      <img src={item.image} alt={item.name} className="cart-image" /> {/* H√¨nh ·∫£nh s·∫£n ph·∫©m */}
      <div className="cart-item-details"> {/* Container cho chi ti·∫øt s·∫£n ph·∫©m */}
        <p className="cart-name">{item.name}</p> {/* T√™n s·∫£n ph·∫©m */}
        <p className="cart-price">üí∞ {item.price.toLocaleString("vi-VN")} VNƒê</p> {/* Gi√° s·∫£n ph·∫©m ƒë·ªãnh d·∫°ng VN */}
        <div className="quantity-controls"> {/* ƒêi·ªÅu khi·ªÉn s·ªë l∆∞·ª£ng */}
          <button
            onClick={() => onDecrease(item.id)} // Gi·∫£m s·ªë l∆∞·ª£ng khi nh·∫•n
            disabled={isDecreaseDisabled} // V√¥ hi·ªáu h√≥a n·∫øu s·ªë l∆∞·ª£ng = 1
            className={isDecreaseDisabled ? "disabled" : ""} // Th√™m class n·∫øu b·ªã v√¥ hi·ªáu h√≥a
          >
            -
          </button>
          <span>{item.quantity}</span> {/* Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng hi·ªán t·∫°i */}
          <button onClick={() => onIncrease(item.id)}>+</button> {/* TƒÉng s·ªë l∆∞·ª£ng khi nh·∫•n */}
        </div>
      </div>
      <button className="remove-button" onClick={() => onRemove(item.id)}> {/* N√∫t x√≥a s·∫£n ph·∫©m */}
        X√≥a
      </button>
    </li>
  );
};

// Component CartSummary - Hi·ªÉn th·ªã t·ªïng ti·ªÅn v√† n√∫t thanh to√°n
const CartSummary = ({ totalPrice, onCheckout }) => ( // Nh·∫≠n props: t·ªïng ti·ªÅn v√† h√†m thanh to√°n
  <div className="cart-summary"> {/* Container cho ph·∫ßn t√≥m t·∫Øt */}
    <h3 className="total-price"> {/* T·ªïng ti·ªÅn */}
      T·ªïng ti·ªÅn: {totalPrice.toLocaleString("vi-VN")} VNƒê
    </h3>
    <button className="checkout-button" onClick={onCheckout}> {/* N√∫t thanh to√°n */}
      üõç Mua h√†ng
    </button>
  </div>
);

// Component EmptyCart - Hi·ªÉn th·ªã khi gi·ªè h√†ng tr·ªëng
const EmptyCart = () => ( // Kh√¥ng nh·∫≠n props
  <p className="empty-cart-message">{MESSAGES.EMPTY_CART}</p> // Th√¥ng b√°o gi·ªè h√†ng tr·ªëng
);

// Component ch√≠nh CartPage - Trang gi·ªè h√†ng
const CartPage = () => {
  const navigate = useNavigate(); // Hook ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng trang
  const { cart, removeFromCart, increaseQuantity, decreaseQuantity, clearCart } = useContext(CartContext); // L·∫•y d·ªØ li·ªáu v√† h√†m t·ª´ CartContext
  const { isLoggedIn } = useContext(AuthContext) || { isLoggedIn: false }; // L·∫•y tr·∫°ng th√°i ƒëƒÉng nh·∫≠p, m·∫∑c ƒë·ªãnh l√† false n·∫øu kh√¥ng c√≥ context
  const [showModal, setShowModal] = useState(false); // State ƒë·ªÉ hi·ªÉn th·ªã/·∫©n modal thanh to√°n

  // T√≠nh t·ªïng ti·ªÅn t·ª´ gi·ªè h√†ng
  const totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0); // T·ªïng = gi√° * s·ªë l∆∞·ª£ng c·ªßa t·ª´ng s·∫£n ph·∫©m

  // X·ª≠ l√Ω s·ª± ki·ªán nh·∫•n n√∫t thanh to√°n
  const handleCheckout = () => {
    if (!isLoggedIn) { // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p
      alert(MESSAGES.LOGIN_REQUIRED); // Hi·ªÉn th·ªã th√¥ng b√°o y√™u c·∫ßu ƒëƒÉng nh·∫≠p
      navigate("/"); // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ƒëƒÉng nh·∫≠p
      return;
    }
    setShowModal(true); // Hi·ªÉn th·ªã modal thanh to√°n n·∫øu ƒë√£ ƒëƒÉng nh·∫≠p
  };

  // X·ª≠ l√Ω khi x√°c nh·∫≠n thanh to√°n t·ª´ modal
  const handleConfirmCheckout = (shippingInfo) => { // Nh·∫≠n th√¥ng tin giao h√†ng t·ª´ modal
    const order = { // T·∫°o ƒë·ªëi t∆∞·ª£ng ƒë∆°n h√†ng m·ªõi
      id: Date.now(), // ID ƒë∆°n h√†ng d·ª±a tr√™n timestamp
      items: cart, // Danh s√°ch s·∫£n ph·∫©m trong gi·ªè h√†ng
      totalPrice, // T·ªïng ti·ªÅn
      shippingInfo, // Th√¥ng tin giao h√†ng
      date: new Date().toISOString(), // Th·ªùi gian ƒë·∫∑t h√†ng
    };

    const existingOrders = JSON.parse(localStorage.getItem("orders")) || []; // L·∫•y danh s√°ch ƒë∆°n h√†ng c≈© t·ª´ localStorage
    localStorage.setItem("orders", JSON.stringify([...existingOrders, order])); // L∆∞u ƒë∆°n h√†ng m·ªõi v√†o localStorage

    alert(MESSAGES.CHECKOUT_SUCCESS); // Th√¥ng b√°o ƒë·∫∑t h√†ng th√†nh c√¥ng
    clearCart(); // X√≥a to√†n b·ªô gi·ªè h√†ng
    setShowModal(false); // ·∫®n modal
    navigate("/home"); // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß
  };

  // X·ª≠ l√Ω khi h·ªßy thanh to√°n t·ª´ modal
  const handleCancelCheckout = () => setShowModal(false); // ·∫®n modal khi h·ªßy

  return (
    <div className="cart-container"> {/* Container ch√≠nh c·ªßa trang gi·ªè h√†ng */}
      <h2>üõç Gi·ªè H√†ng</h2> {/* Ti√™u ƒë·ªÅ trang */}
      {cart.length === 0 ? ( // Ki·ªÉm tra gi·ªè h√†ng c√≥ r·ªóng kh√¥ng
        <EmptyCart /> // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu r·ªóng
      ) : (
        <> {/* Fragment ƒë·ªÉ nh√≥m c√°c ph·∫ßn t·ª≠ */}
          <ul className="cart-list"> {/* Danh s√°ch s·∫£n ph·∫©m trong gi·ªè h√†ng */}
            {cart.map((item) => ( // Duy·ªát qua t·ª´ng s·∫£n ph·∫©m
              <CartItem
                key={item.id} // Key duy nh·∫•t cho m·ªói s·∫£n ph·∫©m
                item={item} // D·ªØ li·ªáu s·∫£n ph·∫©m
                onIncrease={increaseQuantity} // H√†m tƒÉng s·ªë l∆∞·ª£ng
                onDecrease={decreaseQuantity} // H√†m gi·∫£m s·ªë l∆∞·ª£ng
                onRemove={removeFromCart} // H√†m x√≥a s·∫£n ph·∫©m
              />
            ))}
          </ul>
          <CartSummary totalPrice={totalPrice} onCheckout={handleCheckout} /> {/* Hi·ªÉn th·ªã t·ªïng ti·ªÅn v√† n√∫t thanh to√°n */}
        </>
      )}
      {showModal && ( // Hi·ªÉn th·ªã modal n·∫øu showModal = true
        <CheckoutModal
          cart={cart} // Truy·ªÅn danh s√°ch s·∫£n ph·∫©m v√†o modal
          totalPrice={totalPrice} // Truy·ªÅn t·ªïng ti·ªÅn v√†o modal
          onConfirm={handleConfirmCheckout} // H√†m x·ª≠ l√Ω x√°c nh·∫≠n
          onCancel={handleCancelCheckout} // H√†m x·ª≠ l√Ω h·ªßy
        />
      )}
      <div className="cart-links"> {/* Container cho c√°c li√™n k·∫øt ƒëi·ªÅu h∆∞·ªõng */}
        <Link to="/orders" className="order-history-link"> {/* Li√™n k·∫øt ƒë·∫øn l·ªãch s·ª≠ ƒë∆°n h√†ng */}
          üìú Xem l·ªãch s·ª≠ ƒë∆°n h√†ng
        </Link>
        <Link to="/home" className="back-button"> {/* Li√™n k·∫øt quay l·∫°i c·ª≠a h√†ng */}
          ‚¨Ö Quay l·∫°i c·ª≠a h√†ng
        </Link>
      </div>
    </div>
  );
};

export default CartPage; // Xu·∫•t component ƒë·ªÉ s·ª≠ d·ª•ng